cmake_minimum_required(VERSION 3.16.2)
set(CROSS_PREFIX x86_64-linux-musl)
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_VERSION 5.4.6)
set(CMAKE_SYSTEM_PROCESSOR x86_64)
set(CMAKE_SYSROOT /home/slenderchat/x-tools/${CROSS_PREFIX}/${CROSS_PREFIX}/sysroot)
set(CMAKE_C_COMPILER /home/slenderchat/x-tools/${CROSS_PREFIX}/bin/${CROSS_PREFIX}-gcc)
set(CMAKE_CXX_COMPILER /home/slenderchat/x-tools/${CROSS_PREFIX}/bin/${CROSS_PREFIX}-g++)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_C_FLAGS "-march=x86-64 -mtune=generic -pipe -Wall -Wpedantic -Wextra")
set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS})
set(CMAKE_C_FLAGS_DEBUG "-O0 -ggdb")
set(CMAKE_C_FLAGS_RELEASE "-O2 -s")
set(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
set(SCRIPTS_HOME ${CMAKE_SOURCE_DIR}/scripts)
set(DEPS ${CMAKE_SOURCE_DIR}/deps)
set(FFMPEG_HOME ${DEPS}/ffmpeg)
set(X264_HOME ${DEPS}/x264)
set(BOOST_HOME ${DEPS}/boost)
set(X264 ${X264_HOME}/libx264.a)
set(AVFILTER ${FFMPEG_HOME}/libavfilter/libavfilter.a)
set(AVFORMAT ${FFMPEG_HOME}/libavformat/libavformat.a)
set(AVCODEC ${FFMPEG_HOME}/libavcodec/libavcodec.a)
set(AVUTIL ${FFMPEG_HOME}/libavutil/libavutil.a)
set(SWRESAMPLE ${FFMPEG_HOME}/libswresample/libswresample.a)
set(BOOST_FILESYSTEM ${BOOST_HOME}/stage/lib/libboost_filesystem.a)
set(BOOST_REGEX ${BOOST_HOME}/stage/lib/libboost_regex.a)
set(BOOST_SUB libs/container_hash libs/functional libs/integer libs/io libs/static_assert libs/preprocessor libs/mpl libs/smart_ptr libs/iterator libs/core libs/throw_exception libs/type_traits libs/assert libs/detail libs/system libs/predef libs/headers tools/boost_install libs/config libs/filesystem libs/regex tools/build)
set(X264_OPTS --disable-cli --disable-interlaced --bit-depth=8 --chroma-format=420 --enable-static --enable-strip --enable-lto --cross-prefix=${CROSS_PREFIX}-)
set(BOOST_OPTS --with-filesystem --with-regex variant=release link=static runtime-link=static toolset=gcc-my threading=multi)
set(FFMPEG_OPTS --enable-gpl --enable-version3 --disable-all --enable-avfilter --enable-avcodec --enable-avformat --enable-swresample --enable-libx264 --enable-encoder=libx264 --enable-decoder=h264 --enable-muxer=mp4 --enable-demuxer=mov,mp4,m4a,3gp,3g2,mj2,concat --enable-bsf=h264_mp4toannexb --enable-filter=fps --enable-protocol=file,ftp --arch=x86_64 --cpu=generic --cross-prefix='${CROSS_PREFIX}-' --sysroot='${CMAKE_SYSROOT}' --enable-cross-compile --target-os=linux --extra-cflags='-I${X264_HOME}' --extra-ldflags='-L${X264_HOME}' --disable-debug)
file(GENERATE OUTPUT ${BOOST_HOME}/tools/build/src/user-config.jam CONTENT "using gcc : my : ${CROSS_PREFIX}-g++ ;")
file(MAKE_DIRECTORY ${DEPS})
include_directories(${FFMPEG_HOME} ${BOOST_HOME})
project(WBRecode)
add_custom_command(OUTPUT ${X264_HOME}/config.h COMMAND ./configure ${X264_OPTS} DEPENDS libx264-download WORKING_DIRECTORY ${X264_HOME})
add_custom_command(OUTPUT ${X264} COMMAND make clean COMMAND make -j4 DEPENDS libx264-config WORKING_DIRECTORY ${X264_HOME})
add_custom_command(OUTPUT ${X264_HOME}/.git/HEAD COMMAND ${SCRIPTS_HOME}/get.sh ${X264_HOME} https://code.videolan.org/videolan/x264.git stable WORKING_DIRECTORY ${DEPS})
add_custom_target(libx264-download DEPENDS ${X264_HOME}/.git/HEAD)
add_custom_target(libx264-config DEPENDS ${X264_HOME}/config.h)
add_custom_target(libx264 DEPENDS ${X264})
add_custom_command(OUTPUT ${FFMPEG_HOME}/config.h COMMAND ./configure ${FFMPEG_OPTS} DEPENDS libav-download libx264 WORKING_DIRECTORY ${FFMPEG_HOME})
add_custom_command(OUTPUT ${AVFILTER} ${AVUTIL} ${AVFORMAT} ${AVCODEC} ${SWRESAMPLE} COMMAND make clean COMMAND make -j4 DEPENDS libav-config WORKING_DIRECTORY ${FFMPEG_HOME})
add_custom_command(OUTPUT ${FFMPEG_HOME}/.git/HEAD COMMAND ${SCRIPTS_HOME}/get.sh ${FFMPEG_HOME} https://git.ffmpeg.org/ffmpeg.git n4.2.2 WORKING_DIRECTORY ${DEPS})
add_custom_target(libav-download DEPENDS ${FFMPEG_HOME}/.git/HEAD) 
add_custom_target(libav-config DEPENDS ${FFMPEG_HOME}/config.h)
add_custom_target(libav-libs DEPENDS ${AVFILTER} ${AVUTIL} ${AVFORMAT} ${AVCODEC} ${SWRESAMPLE})
add_custom_command(OUTPUT ${BOOST_HOME}/b2 ${BOOST_HOME}/bootstrap.log ${BOOST_HOME}/project-config.jam COMMAND ./bootstrap.sh DEPENDS boost-download WORKING_DIRECTORY ${BOOST_HOME})
add_custom_command(OUTPUT ${BOOST_FILESYSTEM} ${BOOST_REGEX} COMMAND ./b2 --clean COMMAND ./b2 -j4 ${BOOST_OPTS} DEPENDS boost boost-config ${BOOST_HOME}/project-config.jam WORKING_DIRECTORY ${BOOST_HOME})
add_custom_command(OUTPUT ${BOOST_HOME}/.git/HEAD COMMAND ${SCRIPTS_HOME}/get.sh ${BOOST_HOME} https://github.com/boostorg/boost.git boost-1.72.0 ${BOOST_SUB} WORKING_DIRECTORY ${DEPS})
add_custom_target(boost-download DEPENDS ${BOOST_HOME}/.git/HEAD)
add_custom_target(boost-config DEPENDS ${BOOST_HOME}/b2 ${BOOST_HOME}/bootstrap.log ${BOOST_HOME}/project-config.jam)
add_custom_target(boost DEPENDS ${BOOST_FILESYSTEM} ${BOOST_REGEX})
add_executable(WBRecode WBRecode.cpp WBRecode.hpp WBRecode.c WBRecode.h)
add_dependencies(WBRecode libav-libs boost boost-download libav-download libx264-download)
target_link_libraries(WBRecode -static ${AVFILTER} ${AVFORMAT} ${AVCODEC} ${SWRESAMPLE} ${AVUTIL} ${X264} ${BOOST_FILESYSTEM} ${BOOST_REGEX})
